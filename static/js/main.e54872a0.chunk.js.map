{"version":3,"sources":["firebase.js","components/Nav.js","components/Header.js","components/Wishlist.js","components/Item.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Nav","toggleWishlist","setState","showWishlist","state","transferState","stateOfwishList","props","toggleList","className","href","onClick","this","icon","React","Component","Header","Wishlist","key","itemKey","src","alt","name","removeItem","trash","Item","toggleSticker","showSticker","callModalFunc","updateStickerState","showModal","addToWishlist","addItem","show","title","Footer","id","target","rel","library","add","fab","faShoppingCart","faStar","faCodeBranch","faTrash","faTimes","App","itemToBeAdded","database","ref","push","itemToBeRemoved","child","remove","wishlistToggle","displayModal","wallpapers","wishlist","on","response","toSetState","data","val","item","class","map","listItem","wallpaper","isStickered","filter","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e54872a0.chunk.js","sourcesContent":["// firebase.js\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\n// initializing Firebase\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCZl8jhHc9cCv4XWDc_ToMCmrTET3-A8rY\",\n    authDomain: \"sunday-homework.firebaseapp.com\",\n    databaseURL: \"https://sunday-homework.firebaseio.com\",\n    projectId: \"sunday-homework\",\n    storageBucket: \"sunday-homework.appspot.com\",\n    messagingSenderId: \"1069170856330\",\n    appId: \"1:1069170856330:web:edc69f388f24f7f27fb873\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n// this exports the CONFIGURED version of firebase\nexport default firebase;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Nav extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tshowWishlist: false,\n\t\t};\n\t}\n\n\t//create a function that changes the wishlist state\n\ttoggleWishlist = () => {\n    \t//set the state that toggles the wishlist\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tshowWishlist: !this.state.showWishlist,\n\t\t\t},\n\t\t\t//call the function that passes the state back to the parent\n\t\t\t() => {\n\t\t\t\tthis.transferState(this.state.showWishlist);\n\t\t\t}\n\t\t\t);\n  \t};\n\n\t//create a function that sends current wishlist state back to parent to display/hide the wishlist\n\ttransferState = (stateOfwishList) => {\n\t\tthis.props.toggleList(stateOfwishList);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='nav'>\n\t\t\t\t<div className='flex-header wrapper'>\n\n\t\t\t\t\t<nav>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='#home'>Home</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='#shop'>Shop</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='#about'>About</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='#blog'>Blog</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<a href='#contact'>Contact</a>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\n\t\t\t\t\t<ul className='nav-icons'>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t{/* when button is clicked, call the toggle wishlist function*/}\n\t\t\t\t\t\t\t<button className='icon-button' onClick={this.toggleWishlist}>\n\t\t\t\t\t\t\t\t<p className='sr-only'>\n\t\t\t\t\t\t\t\t\tClick this \"star\" icon to open your wishlist.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon='star' />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<button className='icon-button'>\n\t\t\t\t\t\t\t\t<p className='sr-only'>\n\t\t\t\t\t\t\t\t\tClick the \"shopping cart\" icon to open your shopping cart.\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon='shopping-cart' />\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n} \n\nexport default Nav;","import React from 'react';\n\nconst Header = () => {\n    return(\n        <section className='header-text'>\n                <h1>\n                    <span className='sunday'>Sunday</span>\n                    <span className='homework'>Homework</span>\n                </h1>\n\n                <p className='tagline'>\n                    created on a lazy sunday morning, with coffee in hand\n                </p>\n        </section>\n    )\n};\n\nexport default Header;","import React from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass Wishlist extends React.Component {\n  render(){\n    return (\n      <li className='wishlist-flex' key={this.props.itemKey}>\n        \n        <img src={this.props.src} alt={this.props.alt} />\n\n        <p>{this.props.name}</p>\n\n        {/* on click, call the removeItem function in the app.js component */}\n        <button className='icon-button' onClick={this.props.removeItem}>\n          <p className='sr-only'>Click the \"trash can\" icon to remove this item from your wishlist.</p>\n          <FontAwesomeIcon icon={this.props.trash} />\n        </button>\n        \n      </li>\n    );\n  }\n}\n\nexport default Wishlist;","import React from 'react';\nimport ToggleDisplay from 'react-toggle-display';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nclass Item extends React.Component {\n\n\t//check if wallpaper has already been added\n\t//if yes, alert the user\n\t//if no, call function that changes the state\n\ttoggleSticker = () => {\n\t\tthis.props.showSticker === true\n\t\t\t? this.callModalFunc()\n\t\t\t: this.updateStickerState();\n\t};\n\n\n\tcallModalFunc = () => {\n\t\tthis.props.showModal();\n\t};\n\n\t// change the state of the sticker and call then next function\n\tupdateStickerState = () => {\n\t\tthis.props.addToWishlist(this.props.addItem);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<li key={this.props.itemKey}>\n\t\t\t\t<div className='item'>\n\t\t\t\t\t<div className='item-img'>\n\t\t\t\t\t\t<img src={this.props.src} alt={this.props.alt} />\n\n\t\t\t\t\t\t<ToggleDisplay show={this.props.showSticker}>\n\t\t\t\t\t\t\t<p className='star-sticker'>\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon='star' />\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</ToggleDisplay>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<p>{this.props.title}</p>\n\t\t\t\t\t<p>$5.00</p>\n\t\t\t\t</div>\n\n\t\t\t\t<button onClick={this.toggleSticker}>Add to wishlist</button>\n\t\t\t</li>\n\t\t);\n\t}\n}\n\nexport default Item;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className='footer-flex wrapper'>\n        <div className='footer-text' id='about'>\n\n          <p>\n            Created at <a target='_blank' \n           rel=\"noopener noreferrer\" href='https://junocollege.com/'>Juno College</a>\n          </p>\n\n          <p>\n            Design + wallpapers by \n            <a target='_blank' \n           rel=\"noopener noreferrer\" href='https://apesfilmdiary.com/' id='blog'> Aprille Balsom</a>\n          </p>\n\n        </div>\n\n        <div className='footer-icons' id='contact'>\n\n          <p>join us on social</p>\n\n          <div className='icons'>\n            <a className='icon-button' target='_blank' \n           rel=\"noopener noreferrer\" href='https://github.com/aprillebalsom'>\n              <FontAwesomeIcon icon='code-branch' />\n            </a>\n\n            <a className='icon-button' target='_blank' \n           rel=\"noopener noreferrer\" href='https://instagram.com/apesfilmdiary'>\n              <FontAwesomeIcon icon={['fab', 'instagram']} />\n            </a>\n\n            <a className='icon-button' target='_blank' \n           rel=\"noopener noreferrer\" href='https://twitter.com/apebalsom'>\n              <FontAwesomeIcon icon={['fab', 'twitter']} />\n            </a>\n          </div>\n          \n        </div>\n      </div>\n    </footer>\n  );\n} \n\nexport default Footer;","import React from 'react';\nimport firebase from './firebase';\nimport ToggleDisplay from 'react-toggle-display';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {faShoppingCart,faStar,faCodeBranch,faTrash,faTimes} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./App.css\";\n\n//IMPORTING OF OTHER COMPONENTS\nimport Nav from './components/Nav.js';\nimport Header from './components/Header.js';\nimport Wishlist from './components/Wishlist.js';\nimport Item from './components/Item.js';\nimport Footer from './components/Footer.js';\n\nlibrary.add(fab, faShoppingCart, faStar, faCodeBranch, faTrash, faTimes);\n\n// TODO\n// ensure all icons have addtional sr-only info\n//add skiplink\n//remove hover states on mobile nav\n//merge branch\n//push to gh-pages and test \n\nclass App extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\twallpapers: [],\n\t\t\twishlist: [],\n\t\t\tshowWishlist: false,\n\t\t\tshowModal: false,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\n    \t//get wallpaper information from database\n\t\tconst dbRef = firebase.database().ref();\n\n\t\tdbRef.on('value', (response) => {\n\t\t\tconst toSetState = [];\n\t\t\tconst data = response.val();\n\n\t\t\t//push wallpaper data from database into a new array \n\t\t\tfor (let key in data.wallpapers) {\n\n\t\t\t\ttoSetState.push({\n\t\t\t\t\titem: data.wallpapers[key],\n\t\t\t\t\tkey: key,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//use new wallpaper data array to set the state\n\t\t\tthis.setState({\n\t\t\t\twallpapers: toSetState,\n\t\t\t});\n\t\t});\n\n\t\t//get wishlist information from database\n\t\tconst dbRefWishlist = firebase.database().ref('wishlistItems');\n\n\t\tdbRefWishlist.on('value', (response) => {\n\t\t\tconst toSetState = [];\n\t\t\tconst data = response.val();\n\n\t\t\t//push wishlist data from database into a new array\n\t\t\tfor (let key in data) {\n\t\t\t\ttoSetState.push({\n\t\t\t\t\tkey: key,\n\t\t\t\t\titem: data[key].item,\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//use new wishlist data array to set the state\n\t\t\tthis.setState({\n\t\t\t\twishlist: toSetState,\n\t\t\t});\n\t\t});\n  \t}\n\n\t//create a function that adds an item to the wishlist + firebase when a user clicks the \"add to wishlist\" button\n\taddItem = (itemToBeAdded) => {\n\t\tconst dbRef = firebase.database().ref('wishlistItems');\n\t\tdbRef.push(itemToBeAdded);\n\t};\n\n\t// create a function to remove items from the wishlist + firebase when the user clicks the \"garbage can\" icon\n\tremoveItem = (itemToBeRemoved) => {\n\t\tconst dbRef = firebase.database().ref('wishlistItems');\n\t\tdbRef.child(itemToBeRemoved).remove();\n\t};\n\n\t//create a function that displays the wishlist when the user clicks the \"star\" icon \n\twishlistToggle = () => {\n\n\t\t//update the state of the wishlist being displayed\n\t\tthis.setState({\n\t\t\tshowWishlist: !this.state.showWishlist,\n\t\t});\n\t};\n\n\t//create a function that displays a modal when the user attempt to add a wallpaper to their wishlist twice \n\tdisplayModal = () => {\n\n\t\t//update the state of the modal being displayed\n\t\tthis.setState({\n\t\t\tshowModal: !this.state.showModal,\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t{/* skiplink */}\n\t\t\t\t<a href='#shop' class='skip-link'>\n\t\t\t\t\tSkip to Main Content\n\t\t\t\t</a>\n\t\t\t\t<Nav toggleList={this.wishlistToggle} />\n\t\t\t\t<header id='home'>\n\t\t\t\t\t<div className='flex-container wrapper'>\n\t\t\t\t\t\t<Header />\n\n\t\t\t\t\t\t<ToggleDisplay show={this.state.showWishlist}>\n\t\t\t\t\t\t\t<section className='wishlist'>\n\t\t\t\t\t\t\t\t<div className='wishlist-header'>\n\t\t\t\t\t\t\t\t\t<h2>Wishlist</h2>\n\n\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t{/* map through wishlist array and pass info into wishlist component to be displayed */}\n\t\t\t\t\t\t\t\t\t\t{this.state.wishlist.map((listItem) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<Wishlist\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={listItem.key}\n\t\t\t\t\t\t\t\t\t\t\t\t\tname={listItem.item.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={listItem.item.src}\n\t\t\t\t\t\t\t\t\t\t\t\t\talt={listItem.item.alt}\n\t\t\t\t\t\t\t\t\t\t\t\t\tremoveItem={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.removeItem(listItem.key);\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\titemKey={listItem.key}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttrash={faTrash}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</ul>\n\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='exit-button icon-button'\n\t\t\t\t\t\t\t\t\t\tonClick={this.wishlistToggle}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<p className='sr-only'>\n\t\t\t\t\t\t\t\t\t\t\tClose the wishlist by clicking the \"X\", here.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon='times' />\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t</ToggleDisplay>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<main className='items' id='shop'>\n\t\t\t\t\t<section className='wrapper'>\n\t\t\t\t\t\t{/* display modal when a user tries to add a wishlist item that had already been added */}\n\t\t\t\t\t\t<ToggleDisplay show={this.state.showModal}>\n\t\t\t\t\t\t\t<div className='modal'>\n\t\t\t\t\t\t\t\t<div className='modal-content'>\n\t\t\t\t\t\t\t\t\t<h3>wow!</h3>\n\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\tlooks like you \n\t\t\t\t\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t\t\t\t\t<em> really </em>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\tlike that one, it's already in your wishlist!\n\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclassName='close-modal icon-button'\n\t\t\t\t\t\t\t\t\t\tonClick={this.displayModal}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<p className='sr-only'>\n\t\t\t\t\t\t\t\t\t\t\tClose this alert by clicking the \"X\", here.\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon='times' />\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</ToggleDisplay>\n\n\t\t\t\t\t\t<h2>Meet the Doodles</h2>\n\t\t\t\t\t\t<p>Digital wallpapers drawn by hand + shot on 35mm film</p>\n\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{/* map over wallpaper array and pass info into item component */}\n\t\t\t\t\t\t\t{this.state.wallpapers.map((wallpaper) => {\n\t\t\t\t\t\t\t\t// filter through wishlist array and compare to wallpaper arrary return the items that are in both arrays\n\t\t\t\t\t\t\t\t//pass those items into the item component\n\t\t\t\t\t\t\t\tconst isStickered = this.state.wishlist.filter((item) => {\n\t\t\t\t\t\t\t\t\treturn item.item.title === wallpaper.item.title;\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Item\n\t\t\t\t\t\t\t\t\t\tkey={wallpaper.key}\n\t\t\t\t\t\t\t\t\t\tsrc={wallpaper.item.src}\n\t\t\t\t\t\t\t\t\t\talt={wallpaper.item.alt}\n\t\t\t\t\t\t\t\t\t\ttitle={wallpaper.item.title}\n\t\t\t\t\t\t\t\t\t\taddItem={wallpaper}\n\t\t\t\t\t\t\t\t\t\titemKey={wallpaper.key}\n\t\t\t\t\t\t\t\t\t\taddToWishlist={this.addItem}\n\t\t\t\t\t\t\t\t\t\tshowModal={this.displayModal}\n\t\t\t\t\t\t\t\t\t\tshowSticker={isStickered.length > 0}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</section>\n\t\t\t\t</main>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}